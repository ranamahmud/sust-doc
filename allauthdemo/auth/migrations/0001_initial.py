# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2017-03-16 02:34
from __future__ import unicode_literals

import allauthdemo.auth.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='DemoUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='last name')),
                ('display_name', models.CharField(blank=True, max_length=14, null=True, verbose_name='display name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('department', models.CharField(blank=True, default=b'', max_length=3, null=True)),
                ('reg_no', models.IntegerField(blank=True, default=0, null=True)),
                ('session', models.CharField(blank=True, max_length=7, null=True)),
                ('year', models.IntegerField(blank=True, default=1, null=True)),
                ('semester', models.IntegerField(blank=True, default=1, null=True)),
                ('phone', models.IntegerField(blank=True, default=0, null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'auth_user',
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', allauthdemo.auth.models.MyUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name=b'user')),
                ('avatar_url', models.CharField(blank=True, max_length=256, null=True)),
                ('dob', models.DateField(blank=True, null=True, verbose_name=b'dob')),
            ],
            options={
                'db_table': 'user_profile',
            },
        ),
        migrations.AddField(
            model_name='demouser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='demouser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
